@page "/products"
@using DataEntities
@using Store.Services
@inject ProductService ProductService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>Here are some of our amazing outdoor products that you can purchase.</p>

<div class="product">
    <!--<CatalogSearch BrandId="@BrandId" ItemTypeId="@ItemTypeId" />-->
    @if (products is null)
    {
        <p>Loading...</p>
    }
    else
    {

          @foreach (var product in products)
          {

             <ProductListItem product="@product" />

          }
        
    }
</div>

@code {
    private List<Product>? products;

    //private int productsPerRow;
    //private int productCount;
    //private int rowCount;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        products = await ProductService.GetProducts();
        //productsPerRow = 3;
        //productCount = products.Count;
        //rowCount = (int)Math.Ceiling((double)productCount / productsPerRow);
    }

}
